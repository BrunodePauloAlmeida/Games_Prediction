write.table(lec_fasedegrupos, file = "2020_2/LEC_fg.csv", sep = ";", na = "", row.names = FALSE)
write.table(lec_playoffs, file = "2020_2/LEC_po.csv", sep = ";", na = "", row.names = FALSE)
lpl_fasedegrupos = scrape_esportspedia("https://lol.gamepedia.com/LPL/2020_Season/Summer_Season")
lpl_playoffs = scrape_esportspedia("https://lol.gamepedia.com/LPL/2020_Season/Summer_Playoffs")
lpl_regionalqualifiers = scrape_esportspedia("https://lol.gamepedia.com/LPL/2020_Season/Regional_Finals")
lpl_playoffs = rbind(lpl_playoffs, lpl_regionalqualifiers)
write.table(lpl_fasedegrupos, file = "2020_2/LPL_fg.csv", sep = ";", na = "", row.names = FALSE)
write.table(lpl_playoffs, file = "2020_2/LPL_po.csv", sep = ";", na = "", row.names = FALSE)
lcl_fasedegrupos = scrape_esportspedia("https://lol.gamepedia.com/LCL/2020_Season/Summer_Season")
lcl_playoffs = scrape_esportspedia("https://lol.gamepedia.com/LCL/2020_Season/Summer_Playoffs")
write.table(lcl_fasedegrupos, file = "2020_2/LCL_fg.csv", sep = ";", na = "", row.names = FALSE)
write.table(lcl_playoffs, file = "2020_2/LCL_po.csv", sep = ";", na = "", row.names = FALSE)
ljl_fasedegrupos = scrape_esportspedia("https://lol.gamepedia.com/LJL/2020_Season/Summer_Season")
ljl_playoffs = scrape_esportspedia("https://lol.gamepedia.com/LJL/2020_Season/Summer_Playoffs")
write.table(ljl_fasedegrupos, file = "2020_2/LJL_fg.csv", sep = ";", na = "", row.names = FALSE)
write.table(ljl_playoffs, file = "2020_2/LJL_po.csv", sep = ";", na = "", row.names = FALSE)
lla_fasedegrupos = scrape_esportspedia("https://lol.gamepedia.com/LLA/2020_Season/Closing_Season")
lla_playoffs = scrape_esportspedia("https://lol.gamepedia.com/LLA/2020_Season/Closing_Playoffs")
write.table(lla_fasedegrupos, file = "2020_2/LLA_fg.csv", sep = ";", na = "", row.names = FALSE)
write.table(lla_playoffs, file = "2020_2/LLA_po.csv", sep = ";", na = "", row.names = FALSE)
opl_fasedegrupos = scrape_esportspedia("https://lol.gamepedia.com/OPL/2020_Season/Split_2")
opl_playoffs = scrape_esportspedia("https://lol.gamepedia.com/OPL/2020_Season/Split_2_Playoffs")
write.table(opl_fasedegrupos, file = "2020_2/OPL_fg.csv", sep = ";", na = "", row.names = FALSE)
write.table(opl_playoffs, file = "2020_2/OPL_po.csv", sep = ";", na = "", row.names = FALSE)
pcs_fasedegrupos = scrape_esportspedia("https://lol.gamepedia.com/PCS/2020_Season/Summer_Season")
pcs_playoffs = scrape_esportspedia("https://lol.gamepedia.com/PCS/2020_Season/Summer_Playoffs")
write.table(pcs_fasedegrupos, file = "2020_2/PCS_fg.csv", sep = ";", na = "", row.names = FALSE)
write.table(pcs_playoffs, file = "2020_2/PCS_po.csv", sep = ";", na = "", row.names = FALSE)
tcl_fasedegrupos = scrape_esportspedia("https://lol.gamepedia.com/TCL/2020_Season/Summer_Season")
tcl_playoffs = scrape_esportspedia("https://lol.gamepedia.com/TCL/2020_Season/Summer_Playoffs")
write.table(tcl_fasedegrupos, file = "2020_2/TCL_fg.csv", sep = ";", na = "", row.names = FALSE)
write.table(tcl_playoffs, file = "2020_2/TCL_po.csv", sep = ";", na = "", row.names = FALSE)
vcs_fasedegrupos = scrape_esportspedia("https://lol.gamepedia.com/VCS/2020_Season/Summer_Season")
vcs_playoffs = scrape_esportspedia("https://lol.gamepedia.com/VCS/2020_Season/Summer_Playoffs")
write.table(vcs_fasedegrupos, file = "2020_2/VCS_fg.csv", sep = ";", na = "", row.names = FALSE)
write.table(vcs_playoffs, file = "2020_2/VCS_po.csv", sep = ";", na = "", row.names = FALSE)
library(dplyr)
library(rvest)
library(stringr)
scrape_esportspedia <- function(url) {
pag = url %>%
read_html()
tab = pag %>%
html_node("#md-table") %>%
html_table(fill = TRUE)
names(tab) = tab[2,]
etapa = str_extract(tab[,1], "(?<=\\[showhide\\]).*")
for(i in 2:length(etapa)) {
if(is.na(etapa[i])) {
etapa[i] = etapa[i-1]
}
}
deletar = sort(c(which(!is.na(str_extract(tab[,1], "showhide"))), which(!is.na(str_extract(tab[,1], "Team 1")))))
etapa = etapa[-deletar]
tab = tab[-deletar,]
tab$Etapa = etapa
tab[,c(1:3, ncol(tab))] %>%
distinct(.keep_all = TRUE) %>%
mutate(`Team 1` = str_sub(`Team 1`, start = 3),
`Team 2` = str_sub(`Team 2`, start = 3))
}
lck_fasedegrupos = scrape_esportspedia("https://lol.gamepedia.com/LCK/2020_Season/Summer_Season")
lck_playoffs = scrape_esportspedia("https://lol.gamepedia.com/LCK/2020_Season/Summer_Playoffs")
lck_regionalqualifiers = scrape_esportspedia("https://lol.gamepedia.com/LCK/2020_Season/Regional_Finals")
lck_playoffs = rbind(lck_playoffs, lck_regionalqualifiers)
write.table(lck_fasedegrupos, file = "2020_2/LCK_fg.csv", sep = ";", na = "", row.names = FALSE)
write.table(lck_playoffs, file = "2020_2/LCK_po.csv", sep = ";", na = "", row.names = FALSE)
cblol_fasedegrupos = scrape_esportspedia("https://lol.gamepedia.com/CBLOL/2020_Season/Split_2")
cblol_playoffs = scrape_esportspedia("https://lol.gamepedia.com/CBLOL/2020_Season/Split_2_Playoffs")
write.table(cblol_fasedegrupos, file = "2020_2/CBLOL_fg.csv", sep = ";", na = "", row.names = FALSE)
write.table(cblol_playoffs, file = "2020_2/CBLOL_po.csv", sep = ";", na = "", row.names = FALSE)
lcs_fasedegrupos = scrape_esportspedia("https://lol.gamepedia.com/LCS/2020_Season/Summer_Season")
lcs_playoffs = scrape_esportspedia("https://lol.gamepedia.com/LCS/2020_Season/Summer_Playoffs")
write.table(lcs_fasedegrupos, file = "2020_2/LCS_fg.csv", sep = ";", na = "", row.names = FALSE)
write.table(lcs_playoffs, file = "2020_2/LCS_po.csv", sep = ";", na = "", row.names = FALSE)
lec_fasedegrupos = scrape_esportspedia("https://lol.gamepedia.com/LEC/2020_Season/Summer_Season")
lec_playoffs = scrape_esportspedia("https://lol.gamepedia.com/LEC/2020_Season/Summer_Playoffs")
write.table(lec_fasedegrupos, file = "2020_2/LEC_fg.csv", sep = ";", na = "", row.names = FALSE)
write.table(lec_playoffs, file = "2020_2/LEC_po.csv", sep = ";", na = "", row.names = FALSE)
lpl_fasedegrupos = scrape_esportspedia("https://lol.gamepedia.com/LPL/2020_Season/Summer_Season")
lpl_playoffs = scrape_esportspedia("https://lol.gamepedia.com/LPL/2020_Season/Summer_Playoffs")
lpl_regionalqualifiers = scrape_esportspedia("https://lol.gamepedia.com/LPL/2020_Season/Regional_Finals")
lpl_playoffs = rbind(lpl_playoffs, lpl_regionalqualifiers)
write.table(lpl_fasedegrupos, file = "2020_2/LPL_fg.csv", sep = ";", na = "", row.names = FALSE)
write.table(lpl_playoffs, file = "2020_2/LPL_po.csv", sep = ";", na = "", row.names = FALSE)
lcl_fasedegrupos = scrape_esportspedia("https://lol.gamepedia.com/LCL/2020_Season/Summer_Season")
lcl_playoffs = scrape_esportspedia("https://lol.gamepedia.com/LCL/2020_Season/Summer_Playoffs")
write.table(lcl_fasedegrupos, file = "2020_2/LCL_fg.csv", sep = ";", na = "", row.names = FALSE)
write.table(lcl_playoffs, file = "2020_2/LCL_po.csv", sep = ";", na = "", row.names = FALSE)
ljl_fasedegrupos = scrape_esportspedia("https://lol.gamepedia.com/LJL/2020_Season/Summer_Season")
ljl_playoffs = scrape_esportspedia("https://lol.gamepedia.com/LJL/2020_Season/Summer_Playoffs")
write.table(ljl_fasedegrupos, file = "2020_2/LJL_fg.csv", sep = ";", na = "", row.names = FALSE)
write.table(ljl_playoffs, file = "2020_2/LJL_po.csv", sep = ";", na = "", row.names = FALSE)
lla_fasedegrupos = scrape_esportspedia("https://lol.gamepedia.com/LLA/2020_Season/Closing_Season")
lla_playoffs = scrape_esportspedia("https://lol.gamepedia.com/LLA/2020_Season/Closing_Playoffs")
write.table(lla_fasedegrupos, file = "2020_2/LLA_fg.csv", sep = ";", na = "", row.names = FALSE)
write.table(lla_playoffs, file = "2020_2/LLA_po.csv", sep = ";", na = "", row.names = FALSE)
opl_fasedegrupos = scrape_esportspedia("https://lol.gamepedia.com/OPL/2020_Season/Split_2")
opl_playoffs = scrape_esportspedia("https://lol.gamepedia.com/OPL/2020_Season/Split_2_Playoffs")
write.table(opl_fasedegrupos, file = "2020_2/OPL_fg.csv", sep = ";", na = "", row.names = FALSE)
write.table(opl_playoffs, file = "2020_2/OPL_po.csv", sep = ";", na = "", row.names = FALSE)
pcs_fasedegrupos = scrape_esportspedia("https://lol.gamepedia.com/PCS/2020_Season/Summer_Season")
pcs_playoffs = scrape_esportspedia("https://lol.gamepedia.com/PCS/2020_Season/Summer_Playoffs")
write.table(pcs_fasedegrupos, file = "2020_2/PCS_fg.csv", sep = ";", na = "", row.names = FALSE)
write.table(pcs_playoffs, file = "2020_2/PCS_po.csv", sep = ";", na = "", row.names = FALSE)
tcl_fasedegrupos = scrape_esportspedia("https://lol.gamepedia.com/TCL/2020_Season/Summer_Season")
tcl_playoffs = scrape_esportspedia("https://lol.gamepedia.com/TCL/2020_Season/Summer_Playoffs")
write.table(tcl_fasedegrupos, file = "2020_2/TCL_fg.csv", sep = ";", na = "", row.names = FALSE)
write.table(tcl_playoffs, file = "2020_2/TCL_po.csv", sep = ";", na = "", row.names = FALSE)
vcs_fasedegrupos = scrape_esportspedia("https://lol.gamepedia.com/VCS/2020_Season/Summer_Season")
vcs_playoffs = scrape_esportspedia("https://lol.gamepedia.com/VCS/2020_Season/Summer_Playoffs")
write.table(vcs_fasedegrupos, file = "2020_2/VCS_fg.csv", sep = ";", na = "", row.names = FALSE)
write.table(vcs_playoffs, file = "2020_2/VCS_po.csv", sep = ";", na = "", row.names = FALSE)
library(dplyr)
library(rvest)
library(stringr)
scrape_esportspedia <- function(url) {
pag = url %>%
read_html()
tab = pag %>%
html_node("#md-table") %>%
html_table(fill = TRUE)
names(tab) = tab[2,]
etapa = str_extract(tab[,1], "(?<=\\[showhide\\]).*")
for(i in 2:length(etapa)) {
if(is.na(etapa[i])) {
etapa[i] = etapa[i-1]
}
}
deletar = sort(c(which(!is.na(str_extract(tab[,1], "showhide"))), which(!is.na(str_extract(tab[,1], "Team 1")))))
etapa = etapa[-deletar]
tab = tab[-deletar,]
tab$Etapa = etapa
tab[,c(1:3, ncol(tab))] %>%
distinct(.keep_all = TRUE) %>%
mutate(`Team 1` = str_sub(`Team 1`, start = 3),
`Team 2` = str_sub(`Team 2`, start = 3))
}
worlds_season1 = scrape_esportspedia("https://lol.gamepedia.com/Season_1_World_Championship")
worlds_season1
lck_playoffs = scrape_esportspedia("https://lol.gamepedia.com/LCK/2020_Season/Summer_Playoffs")
lck_playoffs
worlds_season2 = scrape_esportspedia("https://lol.gamepedia.com/Season_2_World_Championship")
worlds_season2
worlds_season3 = scrape_esportspedia("https://lol.gamepedia.com/Season_3_World_Championship")
worlds_season3
worlds_season4 = scrape_esportspedia("https://lol.gamepedia.com/2014_Season_World_Championship")
worlds_season4
worlds_season5 = scrape_esportspedia("https://lol.gamepedia.com/2015_Season_World_Championship")
worlds_season5
worlds_season6 = scrape_esportspedia("https://lol.gamepedia.com/2016_Season_World_Championship")
worlds_season6
worlds_season7 = scrape_esportspedia("https://lol.gamepedia.com/2017_Season_World_Championship")
worlds_season6 = scrape_esportspedia("https://lol.gamepedia.com/2016_Season_World_Championship")
worlds_season7 = scrape_esportspedia("https://lol.gamepedia.com/2017_Season_World_Championship")
worlds_season8 = scrape_esportspedia("https://lol.gamepedia.com/2018_Season_World_Championship")
worlds_season9 = scrape_esportspedia("https://lol.gamepedia.com/2019_Season_World_Championship")
worlds_season7
worlds_season7_pin = scrape_esportspedia("https://lol.gamepedia.com/2017_Season_World_Championship/Play-In")
worlds_season7_mev = scrape_esportspedia("https://lol.gamepedia.com/2017_Season_World_Championship/Main_Event")
worlds_season7_pin
worlds_season7_mev
worlds_season7 = rbind(worlds_season7_pin, worlds_season7_mev)
worlds_season7
worlds_season8_pin = scrape_esportspedia("https://lol.gamepedia.com/2018_Season_World_Championship/Play-In")
worlds_season8_mev = scrape_esportspedia("https://lol.gamepedia.com/2018_Season_World_Championship/Main_Event")
worlds_season8 = rbind(worlds_season8_pin, worlds_season8_mev)
worlds_season9_pin = scrape_esportspedia("https://lol.gamepedia.com/2019_Season_World_Championship/Play-In")
worlds_season9_mev = scrape_esportspedia("https://lol.gamepedia.com/2019_Season_World_Championship/Main_Event")
worlds_season9 = rbind(worlds_season9_pin, worlds_season9_mev)
worlds_season8
worlds_season9
library(dplyr)
library(rvest)
library(stringr)
scrape_esportspedia <- function(url) {
pag = url %>%
read_html()
tab = pag %>%
html_node("#md-table") %>%
html_table(fill = TRUE)
names(tab) = tab[2,]
etapa = str_extract(tab[,1], "(?<=\\[showhide\\]).*")
for(i in 2:length(etapa)) {
if(is.na(etapa[i])) {
etapa[i] = etapa[i-1]
}
}
deletar = sort(c(which(!is.na(str_extract(tab[,1], "showhide"))), which(!is.na(str_extract(tab[,1], "Team 1")))))
etapa = etapa[-deletar]
tab = tab[-deletar,]
tab$Etapa = etapa
tab[,c(1:3, ncol(tab))] %>%
distinct(.keep_all = TRUE) %>%
mutate(`Team 1` = str_sub(`Team 1`, start = 3),
`Team 2` = str_sub(`Team 2`, start = 3))
}
worlds_season1 = scrape_esportspedia("https://lol.gamepedia.com/Season_1_World_Championship")
worlds_season2 = scrape_esportspedia("https://lol.gamepedia.com/Season_2_World_Championship")
worlds_season3 = scrape_esportspedia("https://lol.gamepedia.com/Season_3_World_Championship")
worlds_season4 = scrape_esportspedia("https://lol.gamepedia.com/2014_Season_World_Championship")
worlds_season5 = scrape_esportspedia("https://lol.gamepedia.com/2015_Season_World_Championship")
worlds_season6 = scrape_esportspedia("https://lol.gamepedia.com/2016_Season_World_Championship")
worlds_season7_pin = scrape_esportspedia("https://lol.gamepedia.com/2017_Season_World_Championship/Play-In")
worlds_season7_mev = scrape_esportspedia("https://lol.gamepedia.com/2017_Season_World_Championship/Main_Event")
worlds_season7 = rbind(worlds_season7_pin, worlds_season7_mev)
worlds_season8_pin = scrape_esportspedia("https://lol.gamepedia.com/2018_Season_World_Championship/Play-In")
worlds_season8_mev = scrape_esportspedia("https://lol.gamepedia.com/2018_Season_World_Championship/Main_Event")
worlds_season8 = rbind(worlds_season8_pin, worlds_season8_mev)
worlds_season9_pin = scrape_esportspedia("https://lol.gamepedia.com/2019_Season_World_Championship/Play-In")
worlds_season9_mev = scrape_esportspedia("https://lol.gamepedia.com/2019_Season_World_Championship/Main_Event")
worlds_season9 = rbind(worlds_season9_pin, worlds_season9_mev)
write.table(worlds_season1, file = "Worlds/season_1.csv", sep = ";", na = "", row.names = FALSE)
write.table(worlds_season2, file = "Worlds/season_2.csv", sep = ";", na = "", row.names = FALSE)
write.table(worlds_season3, file = "Worlds/season_3.csv", sep = ";", na = "", row.names = FALSE)
write.table(worlds_season4, file = "Worlds/season_4.csv", sep = ";", na = "", row.names = FALSE)
write.table(worlds_season5, file = "Worlds/season_5.csv", sep = ";", na = "", row.names = FALSE)
write.table(worlds_season6, file = "Worlds/season_6.csv", sep = ";", na = "", row.names = FALSE)
write.table(worlds_season7, file = "Worlds/season_7.csv", sep = ";", na = "", row.names = FALSE)
write.table(worlds_season8, file = "Worlds/season_8.csv", sep = ";", na = "", row.names = FALSE)
write.table(worlds_season9, file = "Worlds/season_9.csv", sep = ";", na = "", row.names = FALSE)
library(dplyr)
library(rvest)
library(stringr)
scrape_esportspedia <- function(url) {
pag = url %>%
read_html()
tab = pag %>%
html_node("#md-table") %>%
html_table(fill = TRUE)
names(tab) = tab[2,]
etapa = str_extract(tab[,1], "(?<=\\[showhide\\]).*")
for(i in 2:length(etapa)) {
if(is.na(etapa[i])) {
etapa[i] = etapa[i-1]
}
}
deletar = sort(c(which(!is.na(str_extract(tab[,1], "showhide"))), which(!is.na(str_extract(tab[,1], "Team 1")))))
etapa = etapa[-deletar]
tab = tab[-deletar,]
tab$Etapa = etapa
tab[,c(1:3, ncol(tab))] %>%
distinct(.keep_all = TRUE) %>%
mutate(`Team 1` = str_sub(`Team 1`, start = 3),
`Team 2` = str_sub(`Team 2`, start = 3))
}
worlds_season1 = scrape_esportspedia("https://lol.gamepedia.com/Season_1_World_Championship")
worlds_season2 = scrape_esportspedia("https://lol.gamepedia.com/Season_2_World_Championship")
worlds_season3 = scrape_esportspedia("https://lol.gamepedia.com/Season_3_World_Championship")
worlds_season4 = scrape_esportspedia("https://lol.gamepedia.com/2014_Season_World_Championship")
worlds_season5 = scrape_esportspedia("https://lol.gamepedia.com/2015_Season_World_Championship")
worlds_season6 = scrape_esportspedia("https://lol.gamepedia.com/2016_Season_World_Championship")
worlds_season7_pin = scrape_esportspedia("https://lol.gamepedia.com/2017_Season_World_Championship/Play-In")
worlds_season7_mev = scrape_esportspedia("https://lol.gamepedia.com/2017_Season_World_Championship/Main_Event")
worlds_season7 = rbind(worlds_season7_pin, worlds_season7_mev)
worlds_season8_pin = scrape_esportspedia("https://lol.gamepedia.com/2018_Season_World_Championship/Play-In")
worlds_season8_mev = scrape_esportspedia("https://lol.gamepedia.com/2018_Season_World_Championship/Main_Event")
worlds_season8 = rbind(worlds_season8_pin, worlds_season8_mev)
worlds_season9_pin = scrape_esportspedia("https://lol.gamepedia.com/2019_Season_World_Championship/Play-In")
worlds_season9_mev = scrape_esportspedia("https://lol.gamepedia.com/2019_Season_World_Championship/Main_Event")
worlds_season9 = rbind(worlds_season9_pin, worlds_season9_mev)
write.table(worlds_season1, file = "Worlds/worlds_2011.csv", sep = ";", na = "", row.names = FALSE)
write.table(worlds_season2, file = "Worlds/worlds_2012.csv", sep = ";", na = "", row.names = FALSE)
write.table(worlds_season3, file = "Worlds/worlds_2013.csv", sep = ";", na = "", row.names = FALSE)
write.table(worlds_season4, file = "Worlds/worlds_2014.csv", sep = ";", na = "", row.names = FALSE)
write.table(worlds_season5, file = "Worlds/worlds_2015.csv", sep = ";", na = "", row.names = FALSE)
write.table(worlds_season6, file = "Worlds/worlds_2016.csv", sep = ";", na = "", row.names = FALSE)
write.table(worlds_season7, file = "Worlds/worlds_2017.csv", sep = ";", na = "", row.names = FALSE)
write.table(worlds_season8, file = "Worlds/worlds_2018.csv", sep = ";", na = "", row.names = FALSE)
write.table(worlds_season9, file = "Worlds/worlds_2019.csv", sep = ";", na = "", row.names = FALSE)
library(dplyr)
library(rvest)
library(stringr)
scrape_esportspedia <- function(url) {
pag = url %>%
read_html()
tab = pag %>%
html_node("#md-table") %>%
html_table(fill = TRUE)
names(tab) = tab[2,]
etapa = str_extract(tab[,1], "(?<=\\[showhide\\]).*")
for(i in 2:length(etapa)) {
if(is.na(etapa[i])) {
etapa[i] = etapa[i-1]
}
}
deletar = sort(c(which(!is.na(str_extract(tab[,1], "showhide"))), which(!is.na(str_extract(tab[,1], "Team 1")))))
etapa = etapa[-deletar]
tab = tab[-deletar,]
tab$Etapa = etapa
tab[,c(1:3, ncol(tab))] %>%
distinct(.keep_all = TRUE) %>%
mutate(`Team 1` = str_sub(`Team 1`, start = 3),
`Team 2` = str_sub(`Team 2`, start = 3))
}
worlds_season1 = scrape_esportspedia("https://lol.gamepedia.com/Season_1_World_Championship")
worlds_season2 = scrape_esportspedia("https://lol.gamepedia.com/Season_2_World_Championship")
worlds_season3 = scrape_esportspedia("https://lol.gamepedia.com/Season_3_World_Championship")
worlds_season4 = scrape_esportspedia("https://lol.gamepedia.com/2014_Season_World_Championship")
worlds_season5 = scrape_esportspedia("https://lol.gamepedia.com/2015_Season_World_Championship")
worlds_season6 = scrape_esportspedia("https://lol.gamepedia.com/2016_Season_World_Championship")
worlds_season7_pin = scrape_esportspedia("https://lol.gamepedia.com/2017_Season_World_Championship/Play-In")
worlds_season7_mev = scrape_esportspedia("https://lol.gamepedia.com/2017_Season_World_Championship/Main_Event")
worlds_season7 = rbind(worlds_season7_pin, worlds_season7_mev)
worlds_season8_pin = scrape_esportspedia("https://lol.gamepedia.com/2018_Season_World_Championship/Play-In")
worlds_season8_mev = scrape_esportspedia("https://lol.gamepedia.com/2018_Season_World_Championship/Main_Event")
worlds_season8 = rbind(worlds_season8_pin, worlds_season8_mev)
worlds_season9_pin = scrape_esportspedia("https://lol.gamepedia.com/2019_Season_World_Championship/Play-In")
worlds_season9_mev = scrape_esportspedia("https://lol.gamepedia.com/2019_Season_World_Championship/Main_Event")
worlds_season9 = rbind(worlds_season9_pin, worlds_season9_mev)
worlds_season10_pin = scrape_esportspedia("https://lol.gamepedia.com/2020_Season_World_Championship/Play-In")
worlds_season10_mev = scrape_esportspedia("https://lol.gamepedia.com/2020_Season_World_Championship/Main_Event")
worlds_season10 = rbind(worlds_season10_pin, worlds_season10_mev)
worlds_season10_pin
worlds_season10_mev
worlds_season10
library(dplyr)
library(rvest)
library(stringr)
scrape_esportspedia <- function(url) {
pag = url %>%
read_html()
tab = pag %>%
html_node("#md-table") %>%
html_table(fill = TRUE)
names(tab) = tab[2,]
etapa = str_extract(tab[,1], "(?<=\\[showhide\\]).*")
for(i in 2:length(etapa)) {
if(is.na(etapa[i])) {
etapa[i] = etapa[i-1]
}
}
deletar = sort(c(which(!is.na(str_extract(tab[,1], "showhide"))), which(!is.na(str_extract(tab[,1], "Team 1")))))
etapa = etapa[-deletar]
tab = tab[-deletar,]
tab$Etapa = etapa
tab[,c(1:3, ncol(tab))] %>%
distinct(.keep_all = TRUE) %>%
mutate(`Team 1` = str_sub(`Team 1`, start = 3),
`Team 2` = str_sub(`Team 2`, start = 3))
}
worlds_season1 = scrape_esportspedia("https://lol.gamepedia.com/Season_1_World_Championship")
worlds_season2 = scrape_esportspedia("https://lol.gamepedia.com/Season_2_World_Championship")
worlds_season3 = scrape_esportspedia("https://lol.gamepedia.com/Season_3_World_Championship")
worlds_season4 = scrape_esportspedia("https://lol.gamepedia.com/2014_Season_World_Championship")
worlds_season5 = scrape_esportspedia("https://lol.gamepedia.com/2015_Season_World_Championship")
worlds_season6 = scrape_esportspedia("https://lol.gamepedia.com/2016_Season_World_Championship")
worlds_season7_pin = scrape_esportspedia("https://lol.gamepedia.com/2017_Season_World_Championship/Play-In")
worlds_season7_mev = scrape_esportspedia("https://lol.gamepedia.com/2017_Season_World_Championship/Main_Event")
worlds_season7 = rbind(worlds_season7_pin, worlds_season7_mev)
worlds_season8_pin = scrape_esportspedia("https://lol.gamepedia.com/2018_Season_World_Championship/Play-In")
worlds_season8_mev = scrape_esportspedia("https://lol.gamepedia.com/2018_Season_World_Championship/Main_Event")
worlds_season8 = rbind(worlds_season8_pin, worlds_season8_mev)
worlds_season9_pin = scrape_esportspedia("https://lol.gamepedia.com/2019_Season_World_Championship/Play-In")
worlds_season9_mev = scrape_esportspedia("https://lol.gamepedia.com/2019_Season_World_Championship/Main_Event")
worlds_season9 = rbind(worlds_season9_pin, worlds_season9_mev)
worlds_season10_pin = scrape_esportspedia("https://lol.gamepedia.com/2020_Season_World_Championship/Play-In")
worlds_season10_mev = scrape_esportspedia("https://lol.gamepedia.com/2020_Season_World_Championship/Main_Event")
worlds_season10 = rbind(worlds_season10_pin, worlds_season10_mev)
write.table(worlds_season1, file = "Worlds/worlds_2011.csv", sep = ";", na = "", row.names = FALSE)
write.table(worlds_season2, file = "Worlds/worlds_2012.csv", sep = ";", na = "", row.names = FALSE)
write.table(worlds_season3, file = "Worlds/worlds_2013.csv", sep = ";", na = "", row.names = FALSE)
write.table(worlds_season4, file = "Worlds/worlds_2014.csv", sep = ";", na = "", row.names = FALSE)
write.table(worlds_season5, file = "Worlds/worlds_2015.csv", sep = ";", na = "", row.names = FALSE)
write.table(worlds_season6, file = "Worlds/worlds_2016.csv", sep = ";", na = "", row.names = FALSE)
write.table(worlds_season7, file = "Worlds/worlds_2017.csv", sep = ";", na = "", row.names = FALSE)
write.table(worlds_season8, file = "Worlds/worlds_2018.csv", sep = ";", na = "", row.names = FALSE)
write.table(worlds_season9, file = "Worlds/worlds_2019.csv", sep = ";", na = "", row.names = FALSE)
write.table(worlds_season10, file = "Worlds/worlds_2020.csv", sep = ";", na = "", row.names = FALSE)
library(dplyr)
library(rvest)
library(stringr)
scrape_esportspedia <- function(url) {
pag = url %>%
read_html()
tab = pag %>%
html_node("#md-table") %>%
html_table(fill = TRUE)
names(tab) = tab[2,]
etapa = str_extract(tab[,1], "(?<=\\[showhide\\]).*")
for(i in 2:length(etapa)) {
if(is.na(etapa[i])) {
etapa[i] = etapa[i-1]
}
}
deletar = sort(c(which(!is.na(str_extract(tab[,1], "showhide"))), which(!is.na(str_extract(tab[,1], "Team 1")))))
etapa = etapa[-deletar]
tab = tab[-deletar,]
tab$Etapa = etapa
tab[,c(1:3, ncol(tab))] %>%
distinct(.keep_all = TRUE) %>%
mutate(`Team 1` = str_sub(`Team 1`, start = 3),
`Team 2` = str_sub(`Team 2`, start = 3))
}
worlds_season1 = scrape_esportspedia("https://lol.gamepedia.com/Season_1_World_Championship")
worlds_season2 = scrape_esportspedia("https://lol.gamepedia.com/Season_2_World_Championship")
worlds_season3 = scrape_esportspedia("https://lol.gamepedia.com/Season_3_World_Championship")
worlds_season4 = scrape_esportspedia("https://lol.gamepedia.com/2014_Season_World_Championship")
worlds_season5 = scrape_esportspedia("https://lol.gamepedia.com/2015_Season_World_Championship")
worlds_season6 = scrape_esportspedia("https://lol.gamepedia.com/2016_Season_World_Championship")
worlds_season7_pin = scrape_esportspedia("https://lol.gamepedia.com/2017_Season_World_Championship/Play-In")
worlds_season7_mev = scrape_esportspedia("https://lol.gamepedia.com/2017_Season_World_Championship/Main_Event")
worlds_season7 = rbind(worlds_season7_pin, worlds_season7_mev)
worlds_season8_pin = scrape_esportspedia("https://lol.gamepedia.com/2018_Season_World_Championship/Play-In")
worlds_season8_mev = scrape_esportspedia("https://lol.gamepedia.com/2018_Season_World_Championship/Main_Event")
worlds_season8 = rbind(worlds_season8_pin, worlds_season8_mev)
worlds_season9_pin = scrape_esportspedia("https://lol.gamepedia.com/2019_Season_World_Championship/Play-In")
worlds_season9_mev = scrape_esportspedia("https://lol.gamepedia.com/2019_Season_World_Championship/Main_Event")
worlds_season9 = rbind(worlds_season9_pin, worlds_season9_mev)
worlds_season10_pin = scrape_esportspedia("https://lol.gamepedia.com/2020_Season_World_Championship/Play-In")
worlds_season10_mev = scrape_esportspedia("https://lol.gamepedia.com/2020_Season_World_Championship/Main_Event")
worlds_season10 = rbind(worlds_season10_pin, worlds_season10_mev)
write.table(worlds_season1, file = "Worlds/worlds_2011.csv", sep = ";", na = "", row.names = FALSE)
write.table(worlds_season2, file = "Worlds/worlds_2012.csv", sep = ";", na = "", row.names = FALSE)
write.table(worlds_season3, file = "Worlds/worlds_2013.csv", sep = ";", na = "", row.names = FALSE)
write.table(worlds_season4, file = "Worlds/worlds_2014.csv", sep = ";", na = "", row.names = FALSE)
write.table(worlds_season5, file = "Worlds/worlds_2015.csv", sep = ";", na = "", row.names = FALSE)
write.table(worlds_season6, file = "Worlds/worlds_2016.csv", sep = ";", na = "", row.names = FALSE)
write.table(worlds_season7, file = "Worlds/worlds_2017.csv", sep = ";", na = "", row.names = FALSE)
write.table(worlds_season8, file = "Worlds/worlds_2018.csv", sep = ";", na = "", row.names = FALSE)
write.table(worlds_season9, file = "Worlds/worlds_2019.csv", sep = ";", na = "", row.names = FALSE)
write.table(worlds_season10, file = "Worlds/worlds_2020.csv", sep = ";", na = "", row.names = FALSE)
library(dplyr)
library(rvest)
library(stringr)
scrape_esportspedia <- function(url) {
pag = url %>%
read_html()
tab = pag %>%
html_node("#md-table") %>%
html_table(fill = TRUE)
names(tab) = tab[2,]
etapa = str_extract(tab[,1], "(?<=\\[showhide\\]).*")
for(i in 2:length(etapa)) {
if(is.na(etapa[i])) {
etapa[i] = etapa[i-1]
}
}
deletar = sort(c(which(!is.na(str_extract(tab[,1], "showhide"))), which(!is.na(str_extract(tab[,1], "Team 1")))))
etapa = etapa[-deletar]
tab = tab[-deletar,]
tab$Etapa = etapa
tab[,c(1:3, ncol(tab))] %>%
distinct(.keep_all = TRUE) %>%
mutate(`Team 1` = str_sub(`Team 1`, start = 3),
`Team 2` = str_sub(`Team 2`, start = 3))
}
worlds_season10_pin = scrape_esportspedia("https://lol.gamepedia.com/2020_Season_World_Championship/Play-In")
worlds_season10_mev = scrape_esportspedia("https://lol.gamepedia.com/2020_Season_World_Championship/Main_Event")
worlds_season10 = rbind(worlds_season10_pin, worlds_season10_mev)
worlds_season10
write.table(worlds_season10, file = "Worlds/worlds_2020.csv", sep = ";", na = "", row.names = FALSE)
library(dplyr)
library(rvest)
library(stringr)
scrape_esportspedia <- function(url) {
pag = url %>%
read_html()
tab = pag %>%
html_node("#md-table") %>%
html_table(fill = TRUE)
names(tab) = tab[2,]
etapa = str_extract(tab[,1], "(?<=\\[showhide\\]).*")
for(i in 2:length(etapa)) {
if(is.na(etapa[i])) {
etapa[i] = etapa[i-1]
}
}
deletar = sort(c(which(!is.na(str_extract(tab[,1], "showhide"))), which(!is.na(str_extract(tab[,1], "Team 1")))))
etapa = etapa[-deletar]
tab = tab[-deletar,]
tab$Etapa = etapa
tab[,c(1:3, ncol(tab))] %>%
distinct(.keep_all = TRUE) %>%
mutate(`Team 1` = str_sub(`Team 1`, start = 3),
`Team 2` = str_sub(`Team 2`, start = 3))
}
worlds_season10_pin = scrape_esportspedia("https://lol.gamepedia.com/2020_Season_World_Championship/Play-In")
worlds_season10_mev = scrape_esportspedia("https://lol.gamepedia.com/2020_Season_World_Championship/Main_Event")
worlds_season10 = rbind(worlds_season10_pin, worlds_season10_mev)
write.table(worlds_season10, file = "Worlds/worlds_2020.csv", sep = ";", na = "", row.names = FALSE)
worlds_season10
library(dplyr)
library(rvest)
library(stringr)
scrape_esportspedia <- function(url) {
pag = url %>%
read_html()
tab = pag %>%
html_node("#md-table") %>%
html_table(fill = TRUE)
names(tab) = tab[2,]
etapa = str_extract(tab[,1], "(?<=\\[showhide\\]).*")
for(i in 2:length(etapa)) {
if(is.na(etapa[i])) {
etapa[i] = etapa[i-1]
}
}
deletar = sort(c(which(!is.na(str_extract(tab[,1], "showhide"))), which(!is.na(str_extract(tab[,1], "Team 1")))))
etapa = etapa[-deletar]
tab = tab[-deletar,]
tab$Etapa = etapa
tab[,c(1:3, ncol(tab))] %>%
distinct(.keep_all = TRUE) %>%
mutate(`Team 1` = str_sub(`Team 1`, start = 3),
`Team 2` = str_sub(`Team 2`, start = 3))
}
worlds_season10_pin = scrape_esportspedia("https://lol.gamepedia.com/2020_Season_World_Championship/Play-In")
worlds_season10_mev = scrape_esportspedia("https://lol.gamepedia.com/2020_Season_World_Championship/Main_Event")
worlds_season10 = rbind(worlds_season10_pin, worlds_season10_mev)
worlds_season10
write.table(worlds_season10, file = "Worlds/worlds_2020.csv", sep = ";", na = "", row.names = FALSE)
